// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbe

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type AddressUnspentIdx struct {
	_tab flatbuffers.Table
}

func GetRootAsAddressUnspentIdx(buf []byte, offset flatbuffers.UOffsetT) *AddressUnspentIdx {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &AddressUnspentIdx{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsAddressUnspentIdx(buf []byte, offset flatbuffers.UOffsetT) *AddressUnspentIdx {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &AddressUnspentIdx{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *AddressUnspentIdx) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *AddressUnspentIdx) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *AddressUnspentIdx) Index() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *AddressUnspentIdx) MutateIndex(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

func AddressUnspentIdxStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func AddressUnspentIdxAddIndex(builder *flatbuffers.Builder, index int32) {
	builder.PrependInt32Slot(0, index, 0)
}
func AddressUnspentIdxEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
